<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LcLc : Love Code , Live 2 Code</title>
  
  
  <link href="https://dblepart99.github.io/atom.xml" rel="self"/>
  
  <link href="https://dblepart99.github.io/"/>
  <updated>2021-07-28T02:14:11.870Z</updated>
  <id>https://dblepart99.github.io/</id>
  
  <author>
    <name>Hyunsoo Kim</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>What Is Pull Request?</title>
    <link href="https://dblepart99.github.io/2021/07/28/What-is-Pull-Request/"/>
    <id>https://dblepart99.github.io/2021/07/28/What-is-Pull-Request/</id>
    <published>2021-07-28T02:14:11.000Z</published>
    <updated>2021-07-28T02:14:11.870Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Making Pull Request With Octokit Library</title>
    <link href="https://dblepart99.github.io/2021/07/28/PRwithOctokit/"/>
    <id>https://dblepart99.github.io/2021/07/28/PRwithOctokit/</id>
    <published>2021-07-28T02:10:49.000Z</published>
    <updated>2021-07-28T02:22:03.762Z</updated>
    
    <content type="html"><![CDATA[<h2 id="이-글을-읽기-전에"><a href="#이-글을-읽기-전에" class="headerlink" title="이 글을 읽기 전에.."></a>이 글을 읽기 전에..</h2><p>Octokit 라이브러리와 Pull Request가 무엇인지 궁금할 경우<br><a href="https://dblepart99.github.io/2021/07/28/What-is-Pull-Request/">지난 포스트</a>를 확인해보시면 됩니다.</p><br/><h2 id="Octokit-Library로-Pull-Request생성하기"><a href="#Octokit-Library로-Pull-Request생성하기" class="headerlink" title="Octokit Library로 Pull Request생성하기"></a>Octokit Library로 Pull Request생성하기</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; Octokit &#125; = <span class="built_in">require</span>(<span class="string">&quot;@octokit/core&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> octokit = <span class="keyword">new</span> Octokit(&#123;</span><br><span class="line">    <span class="attr">auth</span>: token <span class="comment">// B의 토큰</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"> <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">makePRfromAtoB</span>(<span class="params"></span>)</span>&#123;       <span class="comment">// B의 레포를 fork한 후 A가 수정하여 PR을 날리는 경우</span></span><br><span class="line">     <span class="keyword">await</span> octokit.request(<span class="string">&quot;POST /repos/&#123;owner&#125;/&#123;repo&#125;/pulls&quot;</span>, &#123;</span><br><span class="line">         <span class="attr">owner</span>: <span class="string">&quot;binaryKim99&quot;</span>,         <span class="comment">// 풀리퀘 받을 학생 이름 -&gt; B</span></span><br><span class="line">         <span class="attr">title</span>: <span class="string">&quot;PR title&quot;</span>,            <span class="comment">// 풀리퀘 제목 </span></span><br><span class="line">         <span class="attr">repo</span>: <span class="string">&quot;binaryKim99Resume&quot;</span>,    <span class="comment">// 풀리퀘 날릴 레포 이름</span></span><br><span class="line">         <span class="attr">body</span>: <span class="string">&quot;pull request body&quot;</span>,    <span class="comment">// 풀리퀘 관련 내용 </span></span><br><span class="line">         <span class="attr">head</span>: <span class="string">&quot;CNUCSE-RESUME:main&quot;</span>,   <span class="comment">//A의 이름:branch 이름</span></span><br><span class="line">         <span class="attr">base</span>: <span class="string">&quot;main&quot;</span>,                 <span class="comment">//B의 branch 이름</span></span><br><span class="line">     &#125;);</span><br><span class="line">     </span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> makePRfromAtoB();</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;이-글을-읽기-전에&quot;&gt;&lt;a href=&quot;#이-글을-읽기-전에&quot; class=&quot;headerlink&quot; title=&quot;이 글을 읽기 전에..&quot;&gt;&lt;/a&gt;이 글을 읽기 전에..&lt;/h2&gt;&lt;p&gt;Octokit 라이브러리와 Pull Request가 무엇인지 </summary>
      
    
    
    
    <category term="Github" scheme="https://dblepart99.github.io/categories/Github/"/>
    
    
    <category term="Github, PR, &#39;Pull request&#39;, github api" scheme="https://dblepart99.github.io/tags/Github-PR-Pull-request-github-api/"/>
    
  </entry>
  
  <entry>
    <title>모각코 4회차</title>
    <link href="https://dblepart99.github.io/2021/07/23/%EB%AA%A8%EA%B0%81%EC%BD%94-4%ED%9A%8C%EC%B0%A8/"/>
    <id>https://dblepart99.github.io/2021/07/23/%EB%AA%A8%EA%B0%81%EC%BD%94-4%ED%9A%8C%EC%B0%A8/</id>
    <published>2021-07-23T13:24:24.000Z</published>
    <updated>2021-07-23T13:24:24.272Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>모각코-3회차</title>
    <link href="https://dblepart99.github.io/2021/07/22/%EB%AA%A8%EA%B0%81%EC%BD%94-3%ED%9A%8C%EC%B0%A8/"/>
    <id>https://dblepart99.github.io/2021/07/22/%EB%AA%A8%EA%B0%81%EC%BD%94-3%ED%9A%8C%EC%B0%A8/</id>
    <published>2021-07-22T10:58:23.000Z</published>
    <updated>2021-07-27T07:21:04.885Z</updated>
    
    <content type="html"><![CDATA[<h2 id="모각코-3회차-계획"><a href="#모각코-3회차-계획" class="headerlink" title="모각코 3회차 계획"></a>모각코 3회차 계획</h2><p>SQL injection이란 무엇인가?<br><a href="https://webhacking.kr/old">SQL injection 실습 문제 old 18번</a></p><h2 id="모각코-3회차-결과"><a href="#모각코-3회차-결과" class="headerlink" title="모각코 3회차 결과"></a>모각코 3회차 결과</h2><h3 id="SQL-injection이란"><a href="#SQL-injection이란" class="headerlink" title="SQL injection이란?"></a>SQL injection이란?</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;모각코-3회차-계획&quot;&gt;&lt;a href=&quot;#모각코-3회차-계획&quot; class=&quot;headerlink&quot; title=&quot;모각코 3회차 계획&quot;&gt;&lt;/a&gt;모각코 3회차 계획&lt;/h2&gt;&lt;p&gt;SQL injection이란 무엇인가?&lt;br&gt;&lt;a href=&quot;http</summary>
      
    
    
    
    <category term="모각코" scheme="https://dblepart99.github.io/categories/%EB%AA%A8%EA%B0%81%EC%BD%94/"/>
    
    
    <category term="모각코,모여서 각자 코딩" scheme="https://dblepart99.github.io/tags/%EB%AA%A8%EA%B0%81%EC%BD%94-%EB%AA%A8%EC%97%AC%EC%84%9C-%EA%B0%81%EC%9E%90-%EC%BD%94%EB%94%A9/"/>
    
  </entry>
  
  <entry>
    <title>백준-1475</title>
    <link href="https://dblepart99.github.io/2021/07/21/%EB%B0%B1%EC%A4%80-1475/"/>
    <id>https://dblepart99.github.io/2021/07/21/%EB%B0%B1%EC%A4%80-1475/</id>
    <published>2021-07-20T16:19:01.000Z</published>
    <updated>2021-07-20T16:23:08.903Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.acmicpc.net/problem/1475">백준 1475 방 번호</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> arr[<span class="number">10</span>];</span><br><span class="line">    <span class="built_in">fill</span>(arr, arr+<span class="number">10</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> N;</span><br><span class="line">    cin &gt;&gt; N;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(N==<span class="number">0</span>)&#123;</span><br><span class="line">        cout &lt;&lt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(N&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> tmp = N%<span class="number">10</span>;</span><br><span class="line">        N/=<span class="number">10</span>;</span><br><span class="line">        arr[tmp]++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    arr[<span class="number">6</span>] += arr[<span class="number">9</span>];</span><br><span class="line">    <span class="keyword">if</span>(arr[<span class="number">6</span>]%<span class="number">2</span>!=<span class="number">0</span>)&#123;</span><br><span class="line">        arr[<span class="number">6</span>]=arr[<span class="number">6</span>]/<span class="number">2</span>+<span class="number">1</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        arr[<span class="number">6</span>]/=<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    arr[<span class="number">9</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> max = *<span class="built_in">max_element</span>(arr, arr+<span class="number">10</span>);</span><br><span class="line">    cout &lt;&lt; max;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>문제에 의하면 6과 9는 뒤집어서 이용할 수 있습니다. 그래서 모든 6과 9의 갯수를 더한 후, 2로 나누어 세트의 개수를 구할 수 있습니다. ex) 6669 =&gt; 6을 2장, 9를 2장으로 만들 수 있음.<br>6과 9의 갯수를 더한 후, 2로 나누어줍니다. 만약 나머지가 있다면 한 세트를 더 뜯어야 한다는 뜻이므로 1을 더해줍니다. </p><p><b>주의 사항</b></p><p>0번 부터 9번까지의 숫자들이므로, 0 한 장만 입력받는 경우도 고려를 해야합니다. </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1475&quot;&gt;백준 1475 방 번호&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;spa</summary>
      
    
    
    
    <category term="알고리즘" scheme="https://dblepart99.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/"/>
    
    
    <category term="백준, 알고리즘, &#39;백준 1475&#39;" scheme="https://dblepart99.github.io/tags/%EB%B0%B1%EC%A4%80-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%B0%B1%EC%A4%80-1475/"/>
    
  </entry>
  
  <entry>
    <title>Xcode빌드시 Unable to Login With Account 오류 해결</title>
    <link href="https://dblepart99.github.io/2021/07/21/xcode-%EC%98%A4%EB%A5%98/"/>
    <id>https://dblepart99.github.io/2021/07/21/xcode-%EC%98%A4%EB%A5%98/</id>
    <published>2021-07-20T15:54:57.000Z</published>
    <updated>2021-07-20T15:57:34.200Z</updated>
    
    <content type="html"><![CDATA[<p>xcode에서 갑자기 빌드가 되지 않아 매우 당황스러웠다..<br>아래 과정을 따라하면 해결할 수 있다.</p><ol><li>Xcode -&gt; Preferences</li><li>Accounts -&gt; 계정 재로그인</li></ol><p><a href="https://stackoverflow.com/questions/41515021/xcode-8-signing-errors-cant-login-with-account-and-no-provisioning-profile">참고자료</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;xcode에서 갑자기 빌드가 되지 않아 매우 당황스러웠다..&lt;br&gt;아래 과정을 따라하면 해결할 수 있다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Xcode -&amp;gt; Preferences&lt;/li&gt;
&lt;li&gt;Accounts -&amp;gt; 계정 재로그인&lt;/li&gt;
&lt;/ol</summary>
      
    
    
    
    
    <category term="xcode, &#39;xcode 오류&#39;" scheme="https://dblepart99.github.io/tags/xcode-xcode-%EC%98%A4%EB%A5%98/"/>
    
  </entry>
  
  <entry>
    <title>백준 10807</title>
    <link href="https://dblepart99.github.io/2021/07/18/%EB%B0%B1%EC%A4%80-10807/"/>
    <id>https://dblepart99.github.io/2021/07/18/%EB%B0%B1%EC%A4%80-10807/</id>
    <published>2021-07-17T16:40:24.000Z</published>
    <updated>2021-07-17T16:44:00.143Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.acmicpc.net/problem/10807">백준 10807 개수 세기</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> arr[<span class="number">201</span>];</span><br><span class="line">    <span class="built_in">fill</span>(arr, arr+<span class="number">201</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> N, tmp;</span><br><span class="line">    cin &gt;&gt; N;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123;</span><br><span class="line">        cin &gt;&gt; tmp;</span><br><span class="line">        arr[tmp+<span class="number">100</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line">    cin &gt;&gt; tmp;</span><br><span class="line">    cout &lt;&lt; arr[tmp+<span class="number">100</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>입력받을 수 있는 숫자의 범위는 -100에서 100까지 총 201개입니다. 길이가 201인 int형 배열을 선언합니다.<br>fill함수를 이용하여 배열 전체를 0으로 초기화해줍니다. 0은 -100에서 100까지의 수 중에서 101번째의 숫자이므로, 입력받은 수 + 100 의 index의 값을 +1을 해주며 입력받은 숫자의 갯수를 세줍니다.<br>마지막으로 입력받은 숫자의 횟수를 출력합니다. </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/10807&quot;&gt;백준 10807 개수 세기&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;</summary>
      
    
    
    
    <category term="알고리즘" scheme="https://dblepart99.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/"/>
    
    
    <category term="백준, 알고리즘, &#39;백준 10807&#39;" scheme="https://dblepart99.github.io/tags/%EB%B0%B1%EC%A4%80-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%B0%B1%EC%A4%80-10807/"/>
    
  </entry>
  
  <entry>
    <title>백준 10808</title>
    <link href="https://dblepart99.github.io/2021/07/18/%EB%B0%B1%EC%A4%80-10808/"/>
    <id>https://dblepart99.github.io/2021/07/18/%EB%B0%B1%EC%A4%80-10808/</id>
    <published>2021-07-17T16:06:58.000Z</published>
    <updated>2021-07-17T16:14:46.722Z</updated>
    
    <content type="html"><![CDATA[<h2 id="백준-배열-문제-연습"><a href="#백준-배열-문제-연습" class="headerlink" title="백준 배열 문제 연습"></a>백준 배열 문제 연습</h2><p><a href="https://www.acmicpc.net/problem/10808">백준 10808 알파벳 갯수</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> arr[<span class="number">26</span>] = &#123;<span class="number">0</span>,&#125;;</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">101</span>];</span><br><span class="line">    </span><br><span class="line">    cin &gt;&gt; str;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(str[i]!=<span class="string">&#x27;\0&#x27;</span>)&#123;</span><br><span class="line">        arr[str[i]-<span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="built_in"><span class="keyword">sizeof</span></span>(arr)/<span class="built_in"><span class="keyword">sizeof</span></span>(<span class="keyword">int</span>); i++)&#123;</span><br><span class="line">        cout &lt;&lt; arr[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>입력받은 문자열의 알파벳 개수를 세는 문제입니다. 알파벳의 전체 갯수인 길이 26인 배열을 생성한 후, 문자열에 있는 알파벳의 순서와 같은 인덱스의 배열을 늘려가면서 알파벳의 갯수를 셉니다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;백준-배열-문제-연습&quot;&gt;&lt;a href=&quot;#백준-배열-문제-연습&quot; class=&quot;headerlink&quot; title=&quot;백준 배열 문제 연습&quot;&gt;&lt;/a&gt;백준 배열 문제 연습&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/p</summary>
      
    
    
    
    <category term="알고리즘" scheme="https://dblepart99.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/"/>
    
    
    <category term="알고리즘, &#39;백준 10808&#39;, 배열" scheme="https://dblepart99.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%B0%B1%EC%A4%80-10808-%EB%B0%B0%EC%97%B4/"/>
    
  </entry>
  
  <entry>
    <title>배열이란?</title>
    <link href="https://dblepart99.github.io/2021/07/17/%EB%B0%B0%EC%97%B4%EC%9D%B4%EB%9E%80/"/>
    <id>https://dblepart99.github.io/2021/07/17/%EB%B0%B0%EC%97%B4%EC%9D%B4%EB%9E%80/</id>
    <published>2021-07-17T08:33:05.000Z</published>
    <updated>2021-07-17T16:06:20.709Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.encrypted.gg/927?category=773649">바킹독 0x03강</a> 배열 강의를 들으며 정리한 내용이다.</p><h1 id="배열"><a href="#배열" class="headerlink" title="배열"></a>배열</h1><h2 id="정의"><a href="#정의" class="headerlink" title="정의"></a>정의</h2><p>배열은 메모리 상에 원소를 연속하게 저장하는 자료구조입니다. </p><h2 id="성질"><a href="#성질" class="headerlink" title="성질"></a>성질</h2><ol><li>배열은 O(1)의 시간복잡도로 원소에 접근가능합니다.</li><li>추가적으로 소모되는 메모리의 양이 거의 없습니다.</li><li>Cache hit rate </li><li>메모리 상에 연속하게 잡아 할당에 제약이 걸림. </li></ol><h1 id="C-배열-초기화"><a href="#C-배열-초기화" class="headerlink" title="C++ 배열 초기화"></a>C++ 배열 초기화</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> b[<span class="number">20</span>][<span class="number">20</span>];</span><br><span class="line"><span class="comment">//1. memset</span></span><br><span class="line"><span class="built_in">memset</span>(a, <span class="number">0</span>, <span class="keyword">sizeof</span> a);</span><br><span class="line"><span class="built_in">memset</span>(b, <span class="number">0</span>, <span class="keyword">sizeof</span> b);</span><br><span class="line"></span><br><span class="line"><span class="comment">//2. for</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>;i++)&#123;</span><br><span class="line">    a[i] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">20</span>; j++)&#123;</span><br><span class="line">        b[i][j] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3. fill</span></span><br><span class="line"><span class="built_in">fill</span>(a, a + <span class="number">20</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++)&#123;</span><br><span class="line">    <span class="built_in">fill</span>(b[i], b[i]+<span class="number">20</span>; <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>memset함수는 cstring헤더에 있음. 0이나 -1 이외의 값은 오동작. 2차원 이상의 배열을 함수의 인자로 넘길 경우, 잘못 들어가기도 함. 실수할 여지로 비추천.</li><li>for문 사용은 투박하지만 실수할 여지가 없음.</li><li>algorithm헤더의 fill함수를 이용하는 것. 실수할 여지도 없고, 코드가 짧아 추천.</li></ol><h2 id="STL-vector"><a href="#STL-vector" class="headerlink" title="STL vector"></a>STL vector</h2><p>STL vector는 배열과 매우 흡사합니다. 그러나 배열과 달리 크기를 자유자재로 늘이거나 줄일 수 있다는 장점이 있습니다. </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://blog.encrypted.gg/927?category=773649&quot;&gt;바킹독 0x03강&lt;/a&gt; 배열 강의를 들으며 정리한 내용이다.&lt;/p&gt;
&lt;h1 id=&quot;배열&quot;&gt;&lt;a href=&quot;#배열&quot; class=&quot;headerlin</summary>
      
    
    
    
    <category term="알고리즘" scheme="https://dblepart99.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/"/>
    
    
    <category term="알고리즘, 배열, STL, STL vector" scheme="https://dblepart99.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%B0%B0%EC%97%B4-STL-STL-vector/"/>
    
  </entry>
  
  <entry>
    <title>모각코-2회차</title>
    <link href="https://dblepart99.github.io/2021/07/16/%EB%AA%A8%EA%B0%81%EC%BD%94-2%ED%9A%8C%EC%B0%A8/"/>
    <id>https://dblepart99.github.io/2021/07/16/%EB%AA%A8%EA%B0%81%EC%BD%94-2%ED%9A%8C%EC%B0%A8/</id>
    <published>2021-07-16T11:11:17.000Z</published>
    <updated>2021-07-17T09:30:10.399Z</updated>
    
    <content type="html"><![CDATA[<h2 id="모각코-2회차-계획"><a href="#모각코-2회차-계획" class="headerlink" title="모각코 2회차 계획"></a>모각코 2회차 계획</h2><ol><li>배열의 사용법</li><li>배열 관련 백준 문제 풀기</li></ol><h2 id="모각코-2회차-결과"><a href="#모각코-2회차-결과" class="headerlink" title="모각코 2회차 결과"></a>모각코 2회차 결과</h2><p>바킹독 0x03강의 수강 후 <a href="https://dblepart99.github.io/2021/07/17/%EB%B0%B0%EC%97%B4%EC%9D%B4%EB%9E%80/">블로그 글</a> 작성했습니다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;모각코-2회차-계획&quot;&gt;&lt;a href=&quot;#모각코-2회차-계획&quot; class=&quot;headerlink&quot; title=&quot;모각코 2회차 계획&quot;&gt;&lt;/a&gt;모각코 2회차 계획&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;배열의 사용법&lt;/li&gt;
&lt;li&gt;배열 관련 백준 문제 풀기&lt;</summary>
      
    
    
    
    <category term="모각코" scheme="https://dblepart99.github.io/categories/%EB%AA%A8%EA%B0%81%EC%BD%94/"/>
    
    
    <category term="모각코,모여서 각자 코딩" scheme="https://dblepart99.github.io/tags/%EB%AA%A8%EA%B0%81%EC%BD%94-%EB%AA%A8%EC%97%AC%EC%84%9C-%EA%B0%81%EC%9E%90-%EC%BD%94%EB%94%A9/"/>
    
  </entry>
  
  <entry>
    <title>모각코 1회차 [계획]</title>
    <link href="https://dblepart99.github.io/2021/07/15/%EB%AA%A8%EA%B0%81%EC%BD%94-1%ED%9A%8C%EC%B0%A8/"/>
    <id>https://dblepart99.github.io/2021/07/15/%EB%AA%A8%EA%B0%81%EC%BD%94-1%ED%9A%8C%EC%B0%A8/</id>
    <published>2021-07-15T10:32:13.000Z</published>
    <updated>2021-07-20T04:29:52.038Z</updated>
    
    <content type="html"><![CDATA[<h2 id="모각코-1회차-계획"><a href="#모각코-1회차-계획" class="headerlink" title="모각코 1회차 계획"></a>모각코 1회차 계획</h2><blockquote><p>html과 js기본 개념 학습 </p></blockquote><h2 id="모각코-1회차-결과"><a href="#모각코-1회차-결과" class="headerlink" title="모각코 1회차 결과"></a>모각코 1회차 결과</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;모각코-1회차-계획&quot;&gt;&lt;a href=&quot;#모각코-1회차-계획&quot; class=&quot;headerlink&quot; title=&quot;모각코 1회차 계획&quot;&gt;&lt;/a&gt;모각코 1회차 계획&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;html과 js기본 개념 학습 &lt;/p&gt;
&lt;/b</summary>
      
    
    
    
    <category term="모각코" scheme="https://dblepart99.github.io/categories/%EB%AA%A8%EA%B0%81%EC%BD%94/"/>
    
    
    <category term="모각코, 모여서 각자 코딩" scheme="https://dblepart99.github.io/tags/%EB%AA%A8%EA%B0%81%EC%BD%94-%EB%AA%A8%EC%97%AC%EC%84%9C-%EA%B0%81%EC%9E%90-%EC%BD%94%EB%94%A9/"/>
    
  </entry>
  
</feed>
