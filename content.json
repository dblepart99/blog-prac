{"pages":[{"title":"All-Categories","text":"","link":"/all-categories/index.html"},{"title":"All-Tags","text":"","link":"/all-tags/index.html"},{"title":"","text":"This is a tech blog","link":"/about/index.html"}],"posts":[{"title":"모각코-2회차","text":"모각코 2회차 계획 배열의 사용법 배열 관련 백준 문제 풀기 모각코 2회차 결과바킹독 0x03강의 수강 후 블로그 글 작성했습니다.","link":"/2021/07/16/%EB%AA%A8%EA%B0%81%EC%BD%94-2%ED%9A%8C%EC%B0%A8/"},{"title":"모각코 1회차 [계획]","text":"오늘의 시작 계획 html과 js기본 개념 학습","link":"/2021/07/15/%EB%AA%A8%EA%B0%81%EC%BD%94-1%ED%9A%8C%EC%B0%A8/"},{"title":"New Post","text":"this is a new post","link":"/2021/07/15/new-post/"},{"title":"백준 10808","text":"백준 배열 문제 연습백준 10808 알파벳 갯수 1234567891011121314151617181920#include &lt;bits/stdc++.h&gt;using namespace std;int main(){ int arr[26] = {0,}; char str[101]; cin &gt;&gt; str; int i = 0; while(str[i]!='\\0'){ arr[str[i]-'a']++; i++; } for(int i = 0; i &lt;sizeof(arr)/sizeof(int); i++){ cout &lt;&lt; arr[i] &lt;&lt; &quot; &quot;; } return 0;} 입력받은 문자열의 알파벳 개수를 세는 문제입니다. 알파벳의 전체 갯수인 길이 26인 배열을 생성한 후, 문자열에 있는 알파벳의 순서와 같은 인덱스의 배열을 늘려가면서 알파벳의 갯수를 셉니다.","link":"/2021/07/18/%EB%B0%B1%EC%A4%80-10808/"},{"title":"배열이란?","text":"바킹독 0x03강 배열 강의를 들으며 정리한 내용이다. 배열정의배열은 메모리 상에 원소를 연속하게 저장하는 자료구조입니다. 성질 배열은 O(1)의 시간복잡도로 원소에 접근가능합니다. 추가적으로 소모되는 메모리의 양이 거의 없습니다. Cache hit rate 메모리 상에 연속하게 잡아 할당에 제약이 걸림. C++ 배열 초기화123456789101112131415161718192021int a[20];int b[20][20];//1. memsetmemset(a, 0, sizeof a);memset(b, 0, sizeof b);//2. forfor(int i = 0; i &lt; 20;i++){ a[i] = 0;}for(int i = 0; i &lt; 20; i++){ for(int j = 0; j &lt; 20; j++){ b[i][j] = 0; }}//3. fillfill(a, a + 20, 0);for(int i = 0; i &lt; 20; i++){ fill(b[i], b[i]+20; 0);} memset함수는 cstring헤더에 있음. 0이나 -1 이외의 값은 오동작. 2차원 이상의 배열을 함수의 인자로 넘길 경우, 잘못 들어가기도 함. 실수할 여지로 비추천. for문 사용은 투박하지만 실수할 여지가 없음. algorithm헤더의 fill함수를 이용하는 것. 실수할 여지도 없고, 코드가 짧아 추천. STL vectorSTL vector는 배열과 매우 흡사합니다. 그러나 배열과 달리 크기를 자유자재로 늘이거나 줄일 수 있다는 장점이 있습니다.","link":"/2021/07/17/%EB%B0%B0%EC%97%B4%EC%9D%B4%EB%9E%80/"}],"tags":[{"name":"모각코,모여서 각자 코딩","slug":"모각코-모여서-각자-코딩","link":"/tags/%EB%AA%A8%EA%B0%81%EC%BD%94-%EB%AA%A8%EC%97%AC%EC%84%9C-%EA%B0%81%EC%9E%90-%EC%BD%94%EB%94%A9/"},{"name":"모각코, 모여서 각자 코딩","slug":"모각코-모여서-각자-코딩","link":"/tags/%EB%AA%A8%EA%B0%81%EC%BD%94-%EB%AA%A8%EC%97%AC%EC%84%9C-%EA%B0%81%EC%9E%90-%EC%BD%94%EB%94%A9/"},{"name":"알고리즘, 백준 10808, 배열","slug":"알고리즘-백준-10808-배열","link":"/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%B0%B1%EC%A4%80-10808-%EB%B0%B0%EC%97%B4/"},{"name":"알고리즘, 배열, STL, STL vector","slug":"알고리즘-배열-STL-STL-vector","link":"/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%B0%B0%EC%97%B4-STL-STL-vector/"}],"categories":[{"name":"모각코","slug":"모각코","link":"/categories/%EB%AA%A8%EA%B0%81%EC%BD%94/"},{"name":"coding","slug":"coding","link":"/categories/coding/"},{"name":"알고리즘","slug":"알고리즘","link":"/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/"}]}